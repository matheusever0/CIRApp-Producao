/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.fortlev.cir.principal;

import br.com.fortlev.cir.connection.ConexaoBancoMysql;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Window;
import java.beans.PropertyVetoException;
import java.net.Inet4Address;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author matheus.s
 */
public class TelaIntern extends javax.swing.JFrame {

    ConexaoBancoMysql conecta = new ConexaoBancoMysql();
    DateFormat formatoHora = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");

    /**
     * Creates new form TelaIntern
     */
    public TelaIntern(String user) {
        initComponents();
        lblUser.setText(user);
        informacoes(); // pega as informações para ficar no interior da tela
        Thread relogioThread = new Thread(new TelaIntern.HoraThread()); // ativa a thread do relógio diretamente.
        relogioThread.start(); // starta a thread
        this.setExtendedState(MAXIMIZED_BOTH);

    }

    public TelaIntern() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/FORTLEV.png"));
        Image image = icon.getImage();
        passagemDeTela = new javax.swing.JDesktopPane(){

            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }

        }
        ;
        panelDados = new javax.swing.JPanel();
        lblUser = new javax.swing.JLabel();
        lblUser1 = new javax.swing.JLabel();
        lblIp1 = new javax.swing.JLabel();
        txtUser3 = new javax.swing.JLabel();
        lblNome1 = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblIP = new javax.swing.JLabel();
        lblHoraData = new javax.swing.JLabel();
        lblHoraData1 = new javax.swing.JLabel();
        lblBeta = new javax.swing.JLabel();
        jMenu = new javax.swing.JMenuBar();
        jArquivo = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        btnUsers = new javax.swing.JMenuItem();
        btnTrocarUsuario = new javax.swing.JMenuItem();
        jAdministrador = new javax.swing.JMenu();
        btnCadUsuario = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        btnSair = new javax.swing.JMenuItem();
        jCadastros = new javax.swing.JMenu();
        btnCadastroMaterial = new javax.swing.JMenuItem();
        jRefugo = new javax.swing.JMenu();
        btnEntrada = new javax.swing.JMenuItem();
        btnConsumo = new javax.swing.JMenuItem();
        jRelatorios = new javax.swing.JMenu();
        btnDetalhado = new javax.swing.JMenuItem();
        btnTotal = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONTROLE DE INVENTÁRIO DE REPROCESSO");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/icon.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        passagemDeTela.setBorder(null);
        passagemDeTela.setPreferredSize(new java.awt.Dimension(1450, 768));

        panelDados.setBackground(new java.awt.Color(255, 255, 255));
        panelDados.setBorder(null);

        lblUser.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblUser.setText("lblUser");

        lblUser1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblUser1.setForeground(new java.awt.Color(0, 0, 255));
        lblUser1.setText("Usuario Conectado:");

        lblIp1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblIp1.setForeground(new java.awt.Color(0, 0, 255));
        lblIp1.setText("IP:");

        lblNome1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblNome1.setForeground(new java.awt.Color(0, 0, 204));
        lblNome1.setText("NomePC:");

        lblNome.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblNome.setText("lblNome");

        lblIP.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblIP.setText("lblIP");

        lblHoraData.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblHoraData.setText("lblHoraData");
        lblHoraData.setFocusTraversalPolicyProvider(true);
        lblHoraData.setRequestFocusEnabled(false);

        lblHoraData1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblHoraData1.setForeground(new java.awt.Color(0, 0, 255));
        lblHoraData1.setText("Hora/Data:");

        lblBeta.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblBeta.setForeground(new java.awt.Color(255, 0, 51));
        lblBeta.setFocusTraversalPolicyProvider(true);
        lblBeta.setRequestFocusEnabled(false);

        javax.swing.GroupLayout panelDadosLayout = new javax.swing.GroupLayout(panelDados);
        panelDados.setLayout(panelDadosLayout);
        panelDadosLayout.setHorizontalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(txtUser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(232, 232, 232))
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addComponent(lblBeta, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addComponent(lblUser1)
                .addGap(4, 4, 4)
                .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblIp1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIP, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHoraData1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHoraData, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(744, Short.MAX_VALUE))
        );
        panelDadosLayout.setVerticalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIP)
                            .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNome1)
                                .addComponent(lblNome))
                            .addComponent(lblIp1))
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUser)
                            .addComponent(lblUser1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHoraData1)
                        .addComponent(lblHoraData)))
                .addComponent(txtUser3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblBeta))
        );

        passagemDeTela.setLayer(panelDados, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout passagemDeTelaLayout = new javax.swing.GroupLayout(passagemDeTela);
        passagemDeTela.setLayout(passagemDeTelaLayout);
        passagemDeTelaLayout.setHorizontalGroup(
            passagemDeTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        passagemDeTelaLayout.setVerticalGroup(
            passagemDeTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, passagemDeTelaLayout.createSequentialGroup()
                .addContainerGap(703, Short.MAX_VALUE)
                .addComponent(panelDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jMenu.setBackground(new java.awt.Color(255, 255, 255));
        jMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu.setForeground(new java.awt.Color(255, 255, 255));
        jMenu.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        jMenu.setOpaque(true);

        jArquivo.setBackground(new java.awt.Color(153, 153, 153));
        jArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/application.png"))); // NOI18N
        jArquivo.setText("ARQUIVO");
        jArquivo.setToolTipText("Gerais. ");
        jArquivo.setAlignmentX(0.0F);
        jArquivo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jArquivo.add(jSeparator3);

        btnUsers.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        btnUsers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/group_key.png"))); // NOI18N
        btnUsers.setText("Info Usuário");
        btnUsers.setToolTipText("Alteração de Usuário");
        btnUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsersActionPerformed(evt);
            }
        });
        jArquivo.add(btnUsers);

        btnTrocarUsuario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        btnTrocarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/user_go.png"))); // NOI18N
        btnTrocarUsuario.setText("Trocar Usuário");
        btnTrocarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrocarUsuarioActionPerformed(evt);
            }
        });
        jArquivo.add(btnTrocarUsuario);

        jAdministrador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/user_gray.png"))); // NOI18N
        jAdministrador.setText("Administrador");
        jAdministrador.setToolTipText("Aba restrita ao administrador.");

        btnCadUsuario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        btnCadUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/user_add.png"))); // NOI18N
        btnCadUsuario.setText("Cadastro de Usuário");
        btnCadUsuario.setToolTipText("Cadastra um usuário que não esteja no AD (Útil para não usuários de computadores).");
        btnCadUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadUsuarioActionPerformed(evt);
            }
        });
        jAdministrador.add(btnCadUsuario);

        jArquivo.add(jAdministrador);
        jArquivo.add(jSeparator2);

        btnSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/door_out.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        jArquivo.add(btnSair);

        jMenu.add(jArquivo);

        jCadastros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/add.png"))); // NOI18N
        jCadastros.setText("CADASTROS");
        jCadastros.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        btnCadastroMaterial.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        btnCadastroMaterial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/page_add.png"))); // NOI18N
        btnCadastroMaterial.setText("Cadastro de Material");
        btnCadastroMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroMaterialActionPerformed(evt);
            }
        });
        jCadastros.add(btnCadastroMaterial);

        jMenu.add(jCadastros);

        jRefugo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/monitor_go.png"))); // NOI18N
        jRefugo.setText("REFUGO");
        jRefugo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        btnEntrada.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        btnEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/application_add.png"))); // NOI18N
        btnEntrada.setText("Entrada Refugo");
        btnEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntradaActionPerformed(evt);
            }
        });
        jRefugo.add(btnEntrada);

        btnConsumo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        btnConsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/application_go.png"))); // NOI18N
        btnConsumo.setText("Consumo Refugo");
        btnConsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsumoActionPerformed(evt);
            }
        });
        jRefugo.add(btnConsumo);

        jMenu.add(jRefugo);

        jRelatorios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/page_white_acrobat.png"))); // NOI18N
        jRelatorios.setText("RELATÓRIOS");
        jRelatorios.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        btnDetalhado.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        btnDetalhado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/page.png"))); // NOI18N
        btnDetalhado.setText("Detalhado");
        btnDetalhado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhadoActionPerformed(evt);
            }
        });
        jRelatorios.add(btnDetalhado);

        btnTotal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        btnTotal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/fortlev/cir/images/page.png"))); // NOI18N
        btnTotal.setText("Total");
        btnTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalActionPerformed(evt);
            }
        });
        jRelatorios.add(btnTotal);

        jMenu.add(jRelatorios);

        setJMenuBar(jMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passagemDeTela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(passagemDeTela, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsersActionPerformed
        // realiza a entrada no modulo de modificação de carga sem precisar de restrições.
        if (!isFOpen("TelaUsuarios")) {
            TelaUsuarios telaUser = new TelaUsuarios(lblUser.getText());
            passagemDeTela.add(telaUser);
            telaUser.setVisible(true);
            System.out.println("Abrir tela do usuário");
        }
    }//GEN-LAST:event_btnUsersActionPerformed

    private void btnTrocarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrocarUsuarioActionPerformed
        // realiza a troca de usuário e vai pro login principal

        Integer opcao = JOptionPane.showConfirmDialog(null, lblUser.getText() + ", você deseja sair do usuário?", "Confirme a Solicitação", JOptionPane.OK_CANCEL_OPTION);
        if (opcao != 2 && opcao != -1) {
            dispose();
            TelaLogin TelaInitLogin = new TelaLogin();
            TelaInitLogin.setVisible(true);
            System.out.println("Trocar usuário.");

        }
    }//GEN-LAST:event_btnTrocarUsuarioActionPerformed

    private void btnCadUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadUsuarioActionPerformed
        /**
         * Abre o cadastro de usuário, somente administradores ou niveis 1 pode
         * ter acesso a esse modulo.
         */

        try {
            conecta.executaSql("SELECT * FROM tb_usuarios WHERE usuario='" + lblUser.getText() + "'");
            conecta.rs.first();

            if (conecta.rs.getString("permissao").equals("1")) {
                if (!isFOpen("TelaCadastroUsuarios")) {
                    TelaCadastroUsuarios telaCadUsuarios = new TelaCadastroUsuarios();
                    passagemDeTela.add(telaCadUsuarios);
                    telaCadUsuarios.setVisible(true);
                    telaCadUsuarios.setPosicao();
                    System.out.println("Abrir a tela de cadastro de usuários");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Somente administradores pode acessar esse módulo!");

            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_btnCadUsuarioActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        fechar();
        // fecha a aplicação direta.
    }//GEN-LAST:event_btnSairActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void btnCadastroMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroMaterialActionPerformed
        try {
            conecta.executaSql("SELECT * FROM tb_usuarios WHERE usuario='" + lblUser.getText() + "'");
            conecta.rs.first();

            if (!conecta.rs.getString("permissao").equals("3")) {
                if (!isFOpen("TelaCadastroMaterial")) {
                    TelaCadastroMaterial cadastro = new TelaCadastroMaterial();
                    passagemDeTela.add(cadastro);
                    cadastro.setVisible(true);
                    cadastro.setPosicao();
                    System.out.println("Abrir a tela de cadastro de materiais.");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Somente usuário avançados podem acessar este módulo!");

            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_btnCadastroMaterialActionPerformed

    private void btnConsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsumoActionPerformed
        if (!isFOpen("TelaConsumoRefugo")) {
            TelaConsumoRefugo refugoB = new TelaConsumoRefugo();
            passagemDeTela.add(refugoB);
            refugoB.setVisible(true);
            refugoB.setPosicao();
            try {
                refugoB.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(TelaIntern.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Abrir a tela de saida de refugo.");
        }
    }//GEN-LAST:event_btnConsumoActionPerformed

    private void btnEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntradaActionPerformed
        if (!isFOpen("TelaEntradaRefugo")) {
            TelaEntradaRefugo refugoA = new TelaEntradaRefugo();
            passagemDeTela.add(refugoA);
            refugoA.setVisible(true);
            refugoA.setPosicao();
            try {
                refugoA.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(TelaIntern.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Abrir a tela de entrada de refugo.");
        }
    }//GEN-LAST:event_btnEntradaActionPerformed

    private void btnDetalhadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhadoActionPerformed
        if (!isFOpen("TelaDashboard")) {
            TelaDashboard dash = new TelaDashboard();
            passagemDeTela.add(dash);
            dash.setVisible(true);
            System.out.println("Abrir a tela de entrada de dashboardDetalhado.");
            dash.setPosicao();
        }

    }//GEN-LAST:event_btnDetalhadoActionPerformed

    private void btnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalActionPerformed
        if (!isFOpen("TelaDashboardTotal")) {
            TelaDashboardTotal dasht = new TelaDashboardTotal();
            passagemDeTela.add(dasht);
            dasht.setVisible(true);
            System.out.println("Abrir a tela de entrada de dashboardTotal.");
            dasht.setPosicao();
        }
    }//GEN-LAST:event_btnTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaIntern.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaIntern.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaIntern.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaIntern.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaIntern().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnCadUsuario;
    private javax.swing.JMenuItem btnCadastroMaterial;
    private javax.swing.JMenuItem btnConsumo;
    private javax.swing.JMenuItem btnDetalhado;
    private javax.swing.JMenuItem btnEntrada;
    private javax.swing.JMenuItem btnSair;
    private javax.swing.JMenuItem btnTotal;
    private javax.swing.JMenuItem btnTrocarUsuario;
    private javax.swing.JMenuItem btnUsers;
    private javax.swing.JMenu jAdministrador;
    private javax.swing.JMenu jArquivo;
    private javax.swing.JMenu jCadastros;
    private javax.swing.JMenuBar jMenu;
    private javax.swing.JMenu jRefugo;
    private javax.swing.JMenu jRelatorios;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JLabel lblBeta;
    private javax.swing.JLabel lblHoraData;
    private javax.swing.JLabel lblHoraData1;
    private javax.swing.JLabel lblIP;
    private javax.swing.JLabel lblIp1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNome1;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblUser1;
    private javax.swing.JPanel panelDados;
    private javax.swing.JDesktopPane passagemDeTela;
    private javax.swing.JLabel txtUser3;
    // End of variables declaration//GEN-END:variables
 /**
     * Pega as informações do IP da maquina e nome da maquina e seta na tela
     * principal
     */
    public void informacoes() {
        try {

            String ipDaMaquina = Inet4Address.getLocalHost().getHostAddress();
            String nomeDaMaquina = Inet4Address.getLocalHost().getHostName();
            lblIP.setText(ipDaMaquina);
            lblNome.setText(nomeDaMaquina);
            System.out.println("Informações carregada com sucesso.");
        } catch (UnknownHostException ex) {

            //Logger.getLogger(TelaInitPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Não foi possivel pegar o IP e o nome da maquina." + ex);
        }
    }

    /**
     * classe para horario no label.
     */
    class HoraThread implements Runnable {

        @Override
        public void run() {
            while (true) {
                lblHoraData.setText(formatoHora.format(new Date()));
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    System.out.println("Thread não foi finalizada: " + ex);;
                }
            }
        }

    }

    /**
     * fecha a aplicação.
     */
    public void fechar() {
        Integer opcao = JOptionPane.showConfirmDialog(null, "Deseja sair do programa?", "Confirme a Solicitação", JOptionPane.OK_CANCEL_OPTION);
        if (opcao != 2 && opcao != -1) {
            System.exit(0);
        } else {

        }
    }

    boolean isFOpen(String nome) {
        JInternalFrame[] windows = passagemDeTela.getAllFrames();
        for (JInternalFrame window : windows) {
            System.out.println(window.getName() + ": " + window.getClass());
            if (window.getClass().toString().contains(nome)) {
                window.toFront();
                JOptionPane.showMessageDialog(null, "Já consta uma tela aberta, estamos posicionando na frente de todas as telas.");
                return true;

            }
        }
        return false;
    }

    boolean isWOpen(String nomeClass) {
        Window[] windows = Window.getWindows();
        for (Window window : windows) {
            System.out.println(window.getName() + ": " + window.getClass());
            if (window.getClass().toString().contains(nomeClass)) {
                if (window.isVisible()) {
                    window.toFront();
                    JOptionPane.showMessageDialog(null, "Já consta uma tela aberta, estamos posicionando na frente de todas as telas.");
                    return true;
                }
            }
        }
        return false;
    }

}
